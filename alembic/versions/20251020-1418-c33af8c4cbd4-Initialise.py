"""Initialise basic schema for storing deployment information.

Revision ID: c33af8c4cbd4
Revises: 
Create Date: 2025-10-20 14:18:29.204871

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'c33af8c4cbd4'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('country',
                    sa.Column(
                        'code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column(
                        'name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('deleted', sa.Boolean(), nullable=False),
                    sa.PrimaryKeyConstraint('code', name=op.f('pk_country'))
                    )
    op.create_table('devicetype',
                    sa.Column(
                        'name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column(
                        'description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('deleted', sa.Boolean(), nullable=False),
                    sa.PrimaryKeyConstraint('name', name=op.f('pk_devicetype'))
                    )
    op.create_table('organisation',
                    sa.Column(
                        'name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column(
                        'full_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('deleted', sa.Boolean(), nullable=False),
                    sa.PrimaryKeyConstraint(
                        'name', name=op.f('pk_organisation'))
                    )
    op.create_table('network',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('organisation_name',
                              sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('country_code', sqlmodel.sql.sqltypes.AutoString(),
                              nullable=False),
                    sa.Column(
                        'name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('deleted', sa.Boolean(), nullable=False),
                    sa.ForeignKeyConstraint(['country_code'], ['country.code'], name=op.f(
                        'fk_network_country_code_country')),
                    sa.ForeignKeyConstraint(['organisation_name'], ['organisation.name'], name=op.f(
                        'fk_network_organisation_name_organisation')),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_network'))
                    )
    op.create_index(op.f('ix_network_country_code'),
                    'network', ['country_code'], unique=False)
    op.create_index(op.f('ix_network_organisation_name'),
                    'network', ['organisation_name'], unique=False)
    op.create_table('deployment',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('network_id', sa.Integer(), nullable=False),
                    sa.Column('devicetype_name',
                              sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column(
                        'name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(),
                              nullable=True),
                    sa.Column('latitude', sa.Float(), nullable=False),
                    sa.Column('longitude', sa.Float(), nullable=False),
                    sa.Column('active', sa.Boolean(), nullable=False),
                    sa.Column('deleted', sa.Boolean(), nullable=False),
                    sa.ForeignKeyConstraint(['devicetype_name'], ['devicetype.name'], name=op.f(
                        'fk_deployment_devicetype_name_devicetype')),
                    sa.ForeignKeyConstraint(['network_id'], ['network.id'], name=op.f(
                        'fk_deployment_network_id_network')),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_deployment'))
                    )
    op.create_index(op.f('ix_deployment_devicetype_name'),
                    'deployment', ['devicetype_name'], unique=False)
    op.create_index(op.f('ix_deployment_network_id'),
                    'deployment', ['network_id'], unique=False)
    op.create_table('device',
                    sa.Column(
                        'id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column(
                        'name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('devicetype_name',
                              sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column(
                        'version', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('current_deployment_id',
                              sa.Integer(), nullable=True),
                    sa.Column('deleted', sa.Boolean(), nullable=False),
                    sa.ForeignKeyConstraint(['current_deployment_id'], ['deployment.id'], name=op.f(
                        'fk_device_current_deployment_id_deployment')),
                    sa.ForeignKeyConstraint(['devicetype_name'], ['devicetype.name'], name=op.f(
                        'fk_device_devicetype_name_devicetype')),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_device'))
                    )
    op.create_index(op.f('ix_device_current_deployment_id'),
                    'device', ['current_deployment_id'], unique=False)
    op.create_index(op.f('ix_device_devicetype_name'),
                    'device', ['devicetype_name'], unique=False)
    op.create_table('deploymentdevice',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column(
                        'device_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('deployment_id', sa.Integer(), nullable=False),
                    sa.Column('start_date', sa.Date(), nullable=False),
                    sa.Column('end_date', sa.Date(), nullable=True),
                    sa.Column('deleted', sa.Boolean(), nullable=False),
                    sa.ForeignKeyConstraint(['deployment_id'], ['deployment.id'], name=op.f(
                        'fk_deploymentdevice_deployment_id_deployment')),
                    sa.ForeignKeyConstraint(['device_id'], ['device.id'], name=op.f(
                        'fk_deploymentdevice_device_id_device')),
                    sa.PrimaryKeyConstraint(
                        'id', name=op.f('pk_deploymentdevice'))
                    )
    op.create_index(op.f('ix_deploymentdevice_deployment_id'),
                    'deploymentdevice', ['deployment_id'], unique=False)
    op.create_index(op.f('ix_deploymentdevice_device_id'),
                    'deploymentdevice', ['device_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_deploymentdevice_device_id'),
                  table_name='deploymentdevice')
    op.drop_index(op.f('ix_deploymentdevice_deployment_id'),
                  table_name='deploymentdevice')
    op.drop_table('deploymentdevice')
    op.drop_index(op.f('ix_device_devicetype_name'), table_name='device')
    op.drop_index(op.f('ix_device_current_deployment_id'), table_name='device')
    op.drop_table('device')
    op.drop_index(op.f('ix_deployment_network_id'), table_name='deployment')
    op.drop_index(op.f('ix_deployment_devicetype_name'),
                  table_name='deployment')
    op.drop_table('deployment')
    op.drop_index(op.f('ix_network_organisation_name'), table_name='network')
    op.drop_index(op.f('ix_network_country_code'), table_name='network')
    op.drop_table('network')
    op.drop_table('organisation')
    op.drop_table('devicetype')
    op.drop_table('country')
    # ### end Alembic commands ###
